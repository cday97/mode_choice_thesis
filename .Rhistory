node [fixedsize = true, width = 3]
'@@1-1' -> '@@1-2' -> '@@1-3' -> '@@1-4'
'@@1-4' -> '@@1-5' -> '@@1-6' -> '@@1-7'
}
# subgraph for RStudio information
subgraph cluster1 {
node [fixedsize = true, width = 3]
'@@2' -> '@@3'
}
Information             [width = 1.5]
Information -> R
Information -> RStudio
R -> '@@1-1'            [lhead = cluster0]
RStudio -> '@@2'        [lhead = cluster1]
}
[1]: paste0(names(R.Version())[1:7], ':\\n ', R.Version()[1:7])
[2]: paste0('RStudio version:\\n ', rstudioapi::versionInfo()[[1]])
[3]: paste0('Current program mode:\\n ', rstudioapi::versionInfo()[[2]])
")
library(DiagramR)
library(DiagrammeR)
grViz("
digraph nicegraph {
# graph, node, and edge definitions
graph [compound = true, nodesep = .5, ranksep = .25,
color = crimson]
node [fontname = Helvetica, fontcolor = darkslategray,
shape = rectangle, fixedsize = true, width = 1,
color = darkslategray]
edge [color = grey, arrowhead = none, arrowtail = none]
# subgraph for R information
subgraph cluster0 {
node [fixedsize = true, width = 3]
'@@1-1' -> '@@1-2' -> '@@1-3' -> '@@1-4'
'@@1-4' -> '@@1-5' -> '@@1-6' -> '@@1-7'
}
# subgraph for RStudio information
subgraph cluster1 {
node [fixedsize = true, width = 3]
'@@2' -> '@@3'
}
Information             [width = 1.5]
Information -> R
Information -> RStudio
R -> '@@1-1'            [lhead = cluster0]
RStudio -> '@@2'        [lhead = cluster1]
}
[1]: paste0(names(R.Version())[1:7], ':\\n ', R.Version()[1:7])
[2]: paste0('RStudio version:\\n ', rstudioapi::versionInfo()[[1]])
[3]: paste0('Current program mode:\\n ', rstudioapi::versionInfo()[[2]])
")
grViz("
digraph a_nice_graph {
# node definitions with substituted label text
node [fontname = Helvetica]
a [label = '@@1']
b [label = '@@2-1']
c [label = '@@2-2']
d [label = '@@2-3']
e [label = '@@2-4']
f [label = '@@2-5']
g [label = '@@2-6']
h [label = '@@2-7']
i [label = '@@2-8']
j [label = '@@2-9']
# edge definitions with the node IDs
a -> {b c d e f g h i j}
}
[1]: 'top'
[2]: 10:20
")
grViz("
digraph nicegraph {
# graph, node, and edge definitions
graph [compound = true, nodesep = .5, ranksep = .25,
color = crimson]
node [fontname = Helvetica, fontcolor = darkslategray,
shape = rectangle, fixedsize = true, width = 1,
color = darkslategray]
edge [color = grey, arrowhead = none, arrowtail = none]
# subgraph for R information
subgraph cluster0 {
node [fixedsize = true, width = 3]
'@@1-1' -> '@@1-2' -> '@@1-3' -> '@@1-4'
'@@1-4' -> '@@1-5' -> '@@1-6' -> '@@1-7'
}
# subgraph for RStudio information
subgraph cluster1 {
node [fixedsize = true, width = 3]
'@@2' -> '@@3'
}
Information             [width = 1.5]
Information -> R
Information -> RStudio
R -> '@@1-1'            [lhead = cluster0]
RStudio -> '@@2'        [lhead = cluster1]
}
[1]: paste0(names(R.Version())[1:7], ':\\n ', R.Version()[1:7])
[2]: paste0('RStudio version:\\n ', rstudioapi::versionInfo()[[1]])
[3]: paste0('Current program mode:\\n ', rstudioapi::versionInfo()[[2]])
")
")
asimtab <- knitr::kable(asimvals, caption = 'Cost coefficient values from the utility parameters csv file', booktabs = TRUE)
asimtab <- knitr::kable(asimvals, caption = 'Cost coefficient values from the utility parameters csv file', booktabs = TRUE)
knitr::kable(asimvals, caption = 'Cost coefficient values from the utility parameters csv file', booktabs = TRUE) %>%
kable_styling(font_size = 7)
knitr::kable(asimvals, caption = 'Cost coefficient values from the utility parameters csv file', booktabs = TRUE) %>%
kable_styling(font_size = 7)
knitr::kable(asimvals, caption = 'Cost coefficient values from the utility parameters csv file', booktabs = TRUE) %>%
kable_styling(font_size = 7)
knitr::kable(asimvals, caption = 'Cost coefficient values from the utility parameters csv file', booktabs = TRUE) %>%
kabel::kable_styling(font_size = 7)
knitr::kable(asimvals, caption = 'Cost coefficient values from the utility parameters csv file', booktabs = TRUE) %>%
knitr::kable_styling(font_size = 7)
library(kableExtra)
knitr::kable(asimvals, caption = 'Cost coefficient values from the utility parameters csv file', booktabs = TRUE) %>%
kable_styling(font_size = 7)
knitr::kable(asimvals, caption = 'Cost coefficient values from the utility parameters csv file', booktabs = TRUE) %>%
kable_styling(latex_options="scale_down")
library(kableExtra)
asimtab <- knitr::kable(asimvals, caption = 'Cost coefficient values from the utility parameters csv file', booktabs = TRUE) %>%
kable_styling(latex_options = "scale_down")
ggsave(asimtab, "asimtabpng")
ggsave("pics/asimtabpng",asimtab)
library(tidyverse)
library(sf)
library(tidyverse)
library(cowplot)
library(ggspatial)
ggsave("pics/asimtabpng",asimtab)
asimtab <- knitr::kable(asimvals, caption = 'Cost coefficient values from the utility parameters csv file', booktabs = TRUE)
ggsave("pics/asimtabpng",asimtab)
ggsave("pics/asimtabpng",asimtab, dpi = 650)
ggsave("pics/asimtab.png",asimtab)
png("test.png", height = 50*nrow(asimtab), width = 200*ncol(asimtab))
library(gridExtra)
png("test.png", height = 50*nrow(asimtab), width = 200*ncol(asimtab))
library(png)
png("test.png", height = 50*nrow(asimtab), width = 200*ncol(asimtab))
asimvals <- read_csv("data/asim-long-R-blank.csv")%>%
filter(variable == "cost", mode %in% c("car", "ride_hail", "walk_transit")) %>%
select(-model) %>%
rename("Variable Type" = tourType, Variable = variable, Alternative = alternative, Units = units, "Tour Purpose" = latentClass, Value = value)
asimvals <- read_csv("data/asim-long-R-blank.csv")%>%
filter(variable == "cost", mode == mode %in% c("car", "ride_hail", "walk_transit")) %>%
select(-model) %>%
rename("Variable Type" = tourType, Variable = variable, Alternative = alternative, Units = units, "Tour Purpose" = latentClass, Value = value)
asimvals <- read_csv("data/asim-long-R-blank.csv")%>%
filter(variable == "cost", mode %in% c("car", "ride_hail", "walk_transit")) %>%
select(-model) %>%
rename("Variable Type" = tourType, Variable = variable, Alternative = alternative, Units = units, "Tour Purpose" = latentClass, Value = value)
asimvals <- read_csv("data/asim-long-R-blank.csv")%>%
filter(variable == "cost", alternative %in% c("car", "ride_hail", "walk_transit")) %>%
select(-model) %>%
rename("Variable Type" = tourType, Variable = variable, Alternative = alternative, Units = units, "Tour Purpose" = latentClass, Value = value)
install.packages("ggVennDiagram")
library(ggVennDiagram)
x <- list(BEAM = c("Car", "Bike", "Ride Hail"), ActivitySim = c("Car", "Bike", "HOV2"))
ggVennDiagram(x)
ggVennDiagram(x, label = "value")
ggVennDiagram(x, label = "both")
ggVennDiagram(x, label = "none")
install.packages("VennDiagram")
library("VennDiagram")
draw.pairwise.venn(area1 = 10,                        # Create pairwise venn diagram
area2 = 20,
cross.area = 2)
grid.newpage()                                        # Move to new plotting page
draw.pairwise.venn(area1 = 10,                        # Create pairwise venn diagram
area2 = 20,
cross.area = 2)
install.packages("RAM")
library(RAM)
install.packages("RAM")
library(devtools)
install.packages("devtools")
library(devtools)
install_url("https://CRAN.R-project.org/package=RAM ")
install_url("https://cran.r-project.org/src/contrib/Archive/RAM/RAM_1.2.1.tar.gz")
foo <- c('a','b','c','d')
baa <- c('a','e','f','g')
group.venn(list(foo=foo, baa=baa), label=TRUE,
fill = c("orange", "blue"),
cat.pos = c(0, 0),
lab.cex=1.1)
library(RAM)
group.venn(list(foo=foo, baa=baa), label=TRUE,
fill = c("orange", "blue"),
cat.pos = c(0, 0),
lab.cex=1.1)
BEAM <- c("Car", "Bike", "Ride Hail")
ActivitySim <- c("Car", "Bike", "HOV2")
group.venn(list(BEAM, ActivitySim), label=TRUE,
fill = c("orange", "blue"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("orange", "blue"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("gray", "blue"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("gray", "yellow"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("gray", "red"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("yellow", "red"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("blue", "red"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "red"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "lightred"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.1)
BEAM <- c("Car", "Bike","Walk", "Ride Hail", "Ride Hail Pooled", "Drive Transit", "Walk Transit", "Ride Hail Transit")
ActivitySim <- c("Car","HOV2","HOV3", "Bike", "Walk", "Walk Transit", "Drive Transit")
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.1)
BEAM <- c("Car", "Bike","Walk", "RideHail", "RideHailPooled", "DriveTransit", "WalkTransit", "RideHailTransit")
ActivitySim <- c("Car","HOV2","HOV3", "Bike", "Walk", "WalkTransit", "DriveTransit")
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(-1, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(-3, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=FALSE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.1)
BEAM <- c("Car", "Bike","Walk", "RideHail", "RideHailPooled", "DriveTransit", "WalkTransit", "RideHailTransit", "BikeTransit")
ActivitySim <- c("Car","HOV2","HOV3", "Bike", "Walk", "WalkTransit", "BikeTransit", "DriveTransit")
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.1)
BEAM <- c("Car", "Bike","Walk", "RideHail", "RideHail \n Pooled", "DriveTransit", "WalkTransit", "RideHailTransit", "BikeTransit")
ActivitySim <- c("Car","HOV2","HOV3", "Bike", "Walk", "WalkTransit", "BikeTransit", "DriveTransit")
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.1)
BEAM <- c("Car", "Bike","Walk", "RideHail", "RideHail \n Pooled", "DriveTransit", "WalkTransit", "RideHail \ Transit", "BikeTransit")
ActivitySim <- c("Car","HOV2","HOV3", "Bike", "Walk", "WalkTransit", "BikeTransit", "DriveTransit")
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.1)
BEAM <- c("Car", "Bike","Walk", "RideHail", "RideHail \n Pooled", "DriveTransit", "WalkTransit", "RideHail \n Transit", "BikeTransit")
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.1)
BEAM <- c("Car", "Bike","Walk", "Ride Hail", "Ride Hail \n Pooled", "Drive Transit", "Walk Transit", "Ride Hail \n Transit", "Bike Transit")
ActivitySim <- c("Car","HOV2","HOV3", "Bike", "Walk", "Walk Transit", "Bike Transit", "Drive Transit")
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=2.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=.8.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.2)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.3)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 0),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 4),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 8),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 15),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(5, 15),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 25),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 55),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(0, 15),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(-15, 15),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(-15, 15),
lab.cex=2.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(-15, 15),
lab.cex=1.2)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(-15, 15),
lab.cex=1.1)
BEAM <- c("Car", "Bike","Walk", "Ride Hail", "Ride Hail- \n Pooled", "Drive Transit", "Walk Transit", "Ride Hail- \n Transit", "Bike Transit")
ActivitySim <- c("Car","HOV2","HOV3", "Bike", "Walk", "Walk Transit", "Bike Transit", "Drive Transit")
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "gray"),
cat.pos = c(-15, 15),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "pink"),
cat.pos = c(-15, 15),
lab.cex=1.1)
ActivitySim <- c("Car","HOV2","HOV3", "Bike", "Walk", "Walk Transit", "Drive Transit")
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "pink"),
cat.pos = c(-15, 15),
lab.cex=1.1)
BEAM <- c("Car", "Bike","Walk", "Ride Hail", "Ride Hail- \n Pooled", "Drive Transit", "Walk Transit", "Ride Hail- \n Transit", "Bike- \n Transit")
ActivitySim <- c("Car","HOV2","HOV3", "Bike", "Walk", "Walk Transit", "Drive Transit")
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "pink"),
cat.pos = c(-15, 15),
lab.cex=1.1)
ActivitySim <- c("Car","HOV2","HOV3", "Bike", "Walk", "Walk Transit", "Drive Transit", "Bike Transit")
BEAM <- c("Car", "Bike","Walk", "Ride Hail", "Ride Hail- \n Pooled", "Drive Transit", "Walk Transit", "Ride Hail- \n Transit", "Bike Transit")
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "pink"),
cat.pos = c(-15, 15),
lab.cex=1.1)
group.venn(list(BEAM=BEAM, ActivitySim=ActivitySim), label=TRUE,
fill = c("lightblue", "pink"),
cat.pos = c(-25, 15),
lab.cex=1.1)
install.packages("readr")
install.packages("readr")
install.packages("tufte")
install.packages("dotwhisker")
install.packages("ggpubr")
install.packages("scales")
install.packages("scales")
library(tidyverse)
library(readr)
library(tufte)
library(dotwhisker)
library(ggpubr)
library(scales)
library(scales)
install.packages("scales")
install.packages("scales")
library(scales)
source("functions/table_maker.R")
tibble(asim_tour_coeffs)
#asim_coeff <- read_csv("model_data/mtc/tour_mode_choice_coefficients.txt")
asim_tour_coeffs <- read_csv("model_data/mtc/mtc_2012_tour_mode_choice_coefficients_path.txt")
# multiply all values in table by 2 (tour values need to be compared with trip values later on, and this will allow that)
cols <- sapply(asim_tour_coeffs, is.numeric)
asim_tour_coeffs[, cols] <- asim_tour_coeffs[, cols] * 2
tibble(asim_tour_coeffs)
asim_hbw <- asim_table(asim_tour_coeffs,Work)
asim_hbw <- asim_table(asim_tour_coeffs,"Work")
#asim_coeff <- read_csv("model_data/mtc/tour_mode_choice_coefficients.txt")
asim_tour_coeffs <- read.table("model_data/mtc/mtc_2012_tour_mode_choice_coefficients.txt", sep="")
#asim_coeff <- read_csv("model_data/mtc/tour_mode_choice_coefficients.txt")
asim_tour_coeffs <- read.table("model_data/mtc/mtc_2012_tour_mode_choice_coefficients.txt", sep="", header=T)
libraty("utils")
library(utils)
#asim_coeff <- read_csv("model_data/mtc/tour_mode_choice_coefficients.txt")
asim_tour_coeffs <- read.table("model_data/mtc/mtc_2012_tour_mode_choice_coefficients.txt", sep="", header=T)
#asim_coeff <- read_csv("model_data/mtc/tour_mode_choice_coefficients.txt")
asim_tour_coeffs <- read.table("model_data/mtc/mtc_2012_tour_mode_choice_coefficients.txt", sep="", header=T)
#asim_coeff <- read_csv("model_data/mtc/tour_mode_choice_coefficients.txt")
asim_tour_coeffs <- read_csv("model_data/mtc/mtc_2012_tour_mode_choice_coefficients.txt", by = "")
#asim_coeff <- read_csv("model_data/mtc/tour_mode_choice_coefficients.txt")
asim_tour_coeffs <- read_table("model_data/mtc/mtc_2012_tour_mode_choice_coefficients.txt")
#asim_coeff <- read_csv("model_data/mtc/tour_mode_choice_coefficients.txt")
asim_tour_coeffs <- read_table("model_data/mtc/mtc_2012_tour_mode_choice_coefficients_path.txt")
# multiply all values in table by 2 (tour values need to be compared with trip values later on, and this will allow that)
cols <- sapply(asim_tour_coeffs, is.numeric)
asim_tour_coeffs[, cols] <- asim_tour_coeffs[, cols] * 2
tibble(asim_tour_coeffs)
utah_hbw_ivtt <- as.numeric(utah_coeff[15,"value"])
source("data/table_maker.R")
source("data/functions/asim_path_validation.R")
source("data/functions/asim_path_validation.R")
asim_tour_coeffs <- read_table("data/model_data/mtc/mtc_2012_tour_mode_choice_coefficients_path.txt")
get_asim_hbw(asim_tour_coeffs)
get_asim_hbw()
get_asim_hbw()
source("data/functions/asim_path_validation.R")
get_asim_hbw()
source("data/functions/asim_path_validation.R")
get_utah_hbw()
get_utah_hbs()
get_utah_hbo()
source("data/functions/asim_path_validation.R")
get_wfrc_hbw()
get_wfrc_hbw()
get_wfrc_hbs()
source("data/functions/asim_path_validation.R")
get_wfrc_hbw()
source("data/functions/table_maker.R")
source("data/functions/asim_path_validation.R")
get_wfrc_hbw()
get_wfrc_hbs()
get_wfrc_hbo()
source("data/functions/asim_path_validation.R")
get_nchrp_hbw()
get_nchrp_hbs()
get_nchrp_hbo()
#ivtt ratio graph
hbw_graph <- ivtt_ratio_grapher("Home-Based Work",get_asim_hbw(),get_utah_hbw(),get_wfrc_hbw(),get_nchrp_hbw())
hbw_graph
hbs_graph <- ivtt_ratio_grapher("Home-Based School",get_asim_hbs(),get_utah_hbs(),get_wfrc_hbs(),get_nchrp_hbs())
hbs_graph
hbo_graph <- ivtt_ratio_grapher("Home-Based Other",get_asim_hbo(),get_utah_hbo(),get_wfrc_hbo(),get_nchrp_hbo())
hbo_graph
hbo_graph <- ivtt_ratio_grapher("Home-Based Other",get_asim_hbo(),get_utah_hbo(),get_wfrc_hbo(),get_nchrp_hbo())
#ivtt ratio graph
hbw_graph <- ivtt_ratio_grapher("Home-Based Work",get_asim_hbw(),get_utah_hbw(),get_wfrc_hbw(),get_nchrp_hbw())
hbw_graph
hbs_graph <- ivtt_ratio_grapher("Home-Based School",get_asim_hbs(),get_utah_hbs(),get_wfrc_hbs(),get_nchrp_hbs())
hbs_graph
hbo_graph <- ivtt_ratio_grapher("Home-Based Other",get_asim_hbo(),get_utah_hbo(),get_wfrc_hbo(),get_nchrp_hbo())
get_asim_hbo()
get_asim_hbo()
get_asim_hbo()
get_asim_hbo()
source("data/functions/asim_path_validation.R")
hbo_graph <- ivtt_ratio_grapher("Home-Based Other",get_asim_hbo(),get_utah_hbo(),get_wfrc_hbo(),get_nchrp_hbo())
hbo_graph
tinytex::install_tinytex("algorithmicx")
get_asim_hbo()
library(tidyverse)
library(tidyverse)
library(sf)
library(cowplot)
library(ggspatial)
library(DiagrammeR)
library(RAM)
library(readr)
library(tufte)
library(dotwhisker)
library(ggpubr)
library(RAM)
library(readr)
library(tufte)
library(dotwhisker)
library(ggpubr)
library(scales)
library(scales)
source("data/functions/table_maker.R")
source("data/functions/asim_path_validation.R")
get_asim_hbo()
hbw_graph
hbs_graph
hbo_graph
hbw_graph
hbo_graph
knitr::include_graphics("pics/mmos.png")
knitr::include_graphics("pics/mmos_mode.png")
knitr::include_graphics("pics/asim-beam-compare.png")
